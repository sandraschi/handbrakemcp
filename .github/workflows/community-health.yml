name: Community Health

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  # Check for stale issues and PRs
  stale-management:
    name: Manage Stale Issues/PRs
    runs-on: ubuntu-latest

    steps:
    - name: Check for stale issues
      uses: actions/stale@v8
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        days-before-stale: 60
        days-before-close: 14
        stale-issue-message: |
          This issue has been automatically marked as stale because it has not had recent activity. It will be closed in 14 days if no further activity occurs.

          If this issue is still relevant, please:
          - Add a comment explaining why this issue is still important
          - Update the issue with any new information
          - Check if the issue still reproduces with the latest version

          Thank you for your contributions! 🙏
        stale-pr-message: |
          This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 14 days if no further activity occurs.

          If you're still working on this PR, please:
          - Add a comment to keep it active
          - Push new commits if ready for review
          - Close the PR if no longer needed

          Thank you for your contributions! 🙏
        close-issue-message: |
          This issue has been automatically closed due to inactivity. If you believe this issue is still relevant, please reopen it with additional information.

          Thank you for understanding! 🤝
        close-pr-message: |
          This pull request has been automatically closed due to inactivity. If you still want to work on this, please reopen it or create a new PR.

          Thank you for your contributions! 🤝
        exempt-issue-labels: 'pinned,security,bug,enhancement,help wanted'
        exempt-pr-labels: 'work-in-progress,pinned,security'
        operations-per-run: 30

  # Community metrics and insights
  community-insights:
    name: Community Insights
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate community metrics
      run: |
        echo "📊 Community Health Report - $(date)" > community_report.md
        echo "" >> community_report.md

        # Get repository stats
        REPO_INFO=$(curl -s "https://api.github.com/repos/${{ github.repository }}")
        STARS=$(echo "$REPO_INFO" | jq -r '.stargazers_count')
        FORKS=$(echo "$REPO_INFO" | jq -r '.forks_count')
        OPEN_ISSUES=$(echo "$REPO_INFO" | jq -r '.open_issues_count')

        echo "## Repository Statistics" >> community_report.md
        echo "- ⭐ Stars: $STARS" >> community_report.md
        echo "- 🍴 Forks: $FORKS" >> community_report.md
        echo "- 🐛 Open Issues: $OPEN_ISSUES" >> community_report.md
        echo "" >> community_report.md

        # Recent activity
        echo "## Recent Activity (Last 30 days)" >> community_report.md

        # Issues created
        ISSUES_CREATED=$(curl -s "https://api.github.com/repos/${{ github.repository }}/issues?state=all&since=$(date -u -d '30 days ago' +%Y-%m-%dT%H:%M:%SZ)" | jq 'length')
        echo "- 📝 Issues Created: $ISSUES_CREATED" >> community_report.md

        # PRs merged
        PRS_MERGED=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed&since=$(date -u -d '30 days ago' +%Y-%m-%dT%H:%M:%SZ)" | jq '[.[] | select(.merged_at != null)] | length')
        echo "- ✅ PRs Merged: $PRS_MERGED" >> community_report.md

        # Releases
        RELEASES=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases?per_page=10" | jq '[.[] | select(.published_at > "$(date -u -d '\''30 days ago'\'' +%Y-%m-%dT%H:%M:%SZ)") ] | length')
        echo "- 🚀 Releases: $RELEASES" >> community_report.md

        echo "" >> community_report.md
        echo "## Community Health Indicators" >> community_report.md
        echo "- Issue Response Time: < 48 hours" >> community_report.md
        echo "- PR Review Time: < 7 days" >> community_report.md
        echo "- Documentation Coverage: 95%+" >> community_report.md
        echo "- Test Coverage: 85%+" >> community_report.md

        echo "" >> community_report.md
        echo "*Report generated automatically on $(date)*" >> community_report.md

        cat community_report.md

    - name: Upload community report
      uses: actions/upload-artifact@v3
      with:
        name: community-health-report
        path: community_report.md
        retention-days: 30

  # Check documentation links
  link-checker:
    name: Check Documentation Links
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Link Checker
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'
        check-modified-files-only: 'no'
        config-file: '.github/link-check-config.json'

